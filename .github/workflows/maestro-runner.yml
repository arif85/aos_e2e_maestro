name: Maestro CI

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

jobs:
  run-maestro:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      APK_PATH: app-under-test.apk
      TEST_FILE: aos_tests/AosBuyProductFromSearchPage.yaml
      REPORT_DIR: maestro-report

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      # --- Download APK from Google Drive via secret GDRIVE_URL ---
      - name: Install gdown (for Google Drive)
        run: python -m pip install --upgrade pip gdown

      - name: Download APK from Google Drive
        env:
          GDRIVE_URL: ${{ secrets.GDRIVE_URL }}
          APK_PATH: ${{ env.APK_PATH }}
        run: |
          test -n "$GDRIVE_URL" || { echo "Secret GDRIVE_URL is missing"; exit 1; }
          gdown --fuzzy "$GDRIVE_URL" -O "$APK_PATH"
          test -s "$APK_PATH" || { echo "Downloaded APK is empty"; exit 1; }
          ls -lh "$APK_PATH"

      # ===== ENABLE KVM (з гайда Marketplace) =====
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      # (необов’язково, просто показати стан)
      - name: Check KVM
        run: |
          ls -l /dev/kvm || true
          egrep -c '(vmx|svm)' /proc/cpuinfo || true
      # ============================================

      - name: Run Maestro on Android emulator (API 33)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          arch: x86_64
          target: default
          profile: pixel_6
          avd-name: ci-api34
          cores: 4
          ram-size: 4096
          heap-size: 576
          force-avd-creation: false
          # ⬇️ додано -accel on (VM acceleration) згідно з докою
          emulator-options: -accel on -no-window -noaudio -no-boot-anim -gpu swiftshader_indirect
          disable-animations: true
          script: |
            set -e
            adb devices
            adb install -r "$APK_PATH"
            mkdir -p "$REPORT_DIR"
            # CHANGED: html-репорт у папку (з asset-ами)
            maestro --verbose test "$TEST_FILE" --format html --output "$REPORT_DIR/results.html"

      - name: Upload Maestro report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-report
          # CHANGED: аплоудимо всю папку з HTML (index.html + assets)
          path: ${{ env.REPORT_DIR }}/**
          if-no-files-found: warn

      # ⬇️ NEW: окремі скріншоти (зі звіту та з .maestro)
      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-screenshots
          path: |
            ${{ env.REPORT_DIR }}/**/*.png
            ${{ env.REPORT_DIR }}/**/*.jpg
            .maestro/**/*.png
            .maestro/**/*.jpg
          if-no-files-found: ignore

      - name: Upload Maestro session artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maestro-session-artifacts
          path: .maestro/**/*
          if-no-files-found: warn
